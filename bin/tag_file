#! /bin/bash
# Splits and tags a file based on its name.

function join_by { local IFS="$1"; shift; echo "$*"; }

. terminal-commands-utils

dry_run=false
while getopts ":di:-:" opt; do
    case $opt in
        -)
            case "${OPTARG}" in
                dry-run)    dry_run=true;;
                ignore)
                            ignore="${!OPTIND}"
                            OPTIND=$(( $OPTIND + 1 ))
                            ;;
                *)          error "Unimplemented option --${OPTARG}";;
            esac
            ;;
        d)  dry_run=true;;
        i)  ignore="$OPTARG";;
        \?) error "Invalid option: -$OPTARG";;
        :)  error "Option -$OPTARG requires an argument.";;
        *)  error "Unimplemented option: -$OPTARG";;
    esac
done
shift $((OPTIND -1))

if [[ -z "$@" ]]; then
    error "missing required parameter: FILE"
    exit 1
fi
filename=$(basename -- "$@")  # with extention
filename="${filename%.*}"

# split by group delimiter (.) and only take the first part. The second part is for grouping and does not impart tagging information.
parts=($(echo $filename | tr "." "\n"))
filename="${parts[0]}"

eligible_tags=($(echo $filename | tr "_" "\n"))

# collect tags based on filename
tags=()
for i in "${eligible_tags[@]}"
do
    # add to running list of tags if nothing is ignored or if the token is not to be ignored
    [[ -z "$ignore" || ! "$i" =~ $ignore ]] && tags+=($i)
done

tag_set=$(join_by ',' "${tags[@]}")
echo "$tag_set"
if [ $dry_run = true ]; then
    echo "Dry-run active. No tags set."
else
    /usr/local/bin/tag --set "$tag_set" "$1"
fi
